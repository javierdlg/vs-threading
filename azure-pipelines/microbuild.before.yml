parameters:
- name: ShouldSkipOptimize

steps:
- task: ComponentGovernanceComponentDetection@0
  displayName: üîç Component Detection

- task: notice@0
  displayName: üõ†Ô∏è Generate NOTICE file
  inputs:
    outputfile: $(System.DefaultWorkingDirectory)/obj/NOTICE
    outputformat: text
  condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))

- task: MicroBuildOptProfPlugin@6
  inputs:
    ProfilingInputsDropName: ProfilingInputs/$(System.TeamProject)/$(Build.Repository.Name)/$(Build.SourceBranchName)/$(Build.BuildNumber)
    OptimizationInputsLookupMethod: DropPrefix
    DropNamePrefix: OptimizationInputs/$(System.TeamProject)/$(Build.Repository.Name)
    ShouldSkipOptimize: ${{ parameters.ShouldSkipOptimize }}
    AccessToken: $(System.AccessToken)
  displayName: üîß Install OptProf Plugin

- task: MicroBuildLocalizationPlugin@3
  inputs:
    languages: $(LocLanguages)
  displayName: üîß Install MicroBuild Localization Plugin

- task: MicroBuildSigningPlugin@3
  inputs:
    signType: $(SignType)
    zipSources: false
  displayName: üîß Install MicroBuild Signing Plugin
  condition: and(succeeded(), or(eq(variables['Agent.OS'], 'Windows_NT'), eq(variables['SignType'], 'real')))

- task: MicroBuildSbomPlugin@1
  displayName: üîß Install MicroBuild Sbom Plugin
  condition: and(succeeded(), eq(variables['Agent.OS'], 'Windows_NT'))
